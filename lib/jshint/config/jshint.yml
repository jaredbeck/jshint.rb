# ------------ rake task options ------------

# JS files to check by default, if no parameters are passed to rake jshint
# (you may want to limit this only to your own scripts and exclude any external scripts and frameworks)

# this can be overridden by adding 'paths' and 'exclude_paths' parameter to rake command:
#   rake jshint paths=path1,path2,... exclude_paths=library1,library2,...

paths:
  - public/javascripts/**/*.js

exclude_paths:


# ------------ jshint options ------------
# visit http://jshint.com/ for complete documentation

# "enforce" type options (true means potentially more warnings)

bitwise:  true      # true if bitwise operators should not be allowed
newcap:   true      # true if Initial Caps must be used with constructor functions
eqeqeq:   false     # true if === should be required (for ALL equality comparisons)
immed:    false     # true if immediate function invocations must be wrapped in parens
nomen:    false     # true if initial or trailing underscore in identifiers should be forbidden
onevar:   false     # true if only one var statement per function should be allowed
plusplus: false     # true if ++ and -- should not be allowed
regexp:   false     # true if . and [^...] should not be allowed in RegExp literals
strict:   false     # true if the ES5 "use strict"; pragma is required
undef:    true      # true if variables must be declared before used
white:    false     # true if strict whitespace rules apply (see also 'indent' option)

# "allow" type options (false means potentially more warnings)

debug:    false     # true if debugger statements should be allowed (set to false before going into production)
es5:      false     # true if ECMAScript 5 syntax should be allowed
evil:     false     # true if eval should be allowed
forin:    false     # true if unfiltered 'for in' statements should be allowed
laxbreak: false     # true if statement breaks should not be checked
sub:      false     # true if subscript notation may be used for expressions better expressed in dot notation

# other options

maxlen:   160       # Maximum line length
indent:   2         # Number of spaces that should be used for indentation - used only if 'white' option is set
maxerr:   50        # The maximum number of warnings reported (per file)
passfail: false     # true if the scan should stop on first error (per file)
# following are relevant only if undef = true
predef:   ''        # Names of predefined global variables - comma-separated string or a YAML array
browser:  true      # true if the standard browser globals should be predefined
rhino:    false     # true if the Rhino environment globals should be predefined
devel:    false     # true if functions like alert, confirm, console, prompt etc. are predefined

# jshint options
loopfunc: true      # true if functions should be allowed to be defined within loops
asi:      true      # true if automatic semicolon insertion should be tolerated
boss:     true      # true if advanced usage of assignments and == should be allowed
couch:    true      # true if CouchDB globals should be predefined
curly:    false     # true if curly braces around blocks should be required (even in if/for/while)
noarg:    true      # true if arguments.caller and arguments.callee should be disallowed
node:     true      # true if the Node.js environment globals should be predefined
noempty:  true      # true if empty blocks should be disallowed
nonew:    true      # true if using `new` for side-effects should be disallowed

# ignores "missing semicolon" warning at the end of a function; this lets you write one-liners
# like: x.map(function(i) { return i + 1 }); without having to put a second semicolon inside the function
lastsemic: false
